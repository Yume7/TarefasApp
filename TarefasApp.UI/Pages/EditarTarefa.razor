@page "/editar-tarefa/{id:guid}"
@using TarefasApp.Domain.DTOs.Responses
@using TarefasApp.Domain.DTOs.Requests

@inject TarefaService TarefaService
@inject NavigationManager Navigation

<h3 class="text-center mt-4">Editar Tarefa</h3>

@if (tarefa == null)
{
    <div class="text-center mt-4">
        <p class="text-muted">Carregando dados...</p>
    </div>
}
else
{
    <div class="container d-flex justify-content-center">
        <div class="card p-4 shadow-lg w-50">
            <div class="form-group mb-3">
                <label class="fw-bold">Título</label>
                <input @bind="tarefa.Titulo" class="form-control" placeholder="Digite o título" />
            </div>

            <div class="form-group mb-3">
                <label class="fw-bold">Descrição</label>
                <textarea @bind="tarefa.Descricao" class="form-control" placeholder="Digite a descrição"></textarea>
            </div>

            <div class="form-group mb-3">
                <label class="fw-bold">Data</label>
                <input type="date" @bind="tarefa.Data" class="form-control" />
            </div>

            <div class="form-group mb-4">
                <label class="fw-bold">Status</label>
                <select @bind="tarefa.Status" class="form-control">
                    <option value="0">Pendente</option>
                    <option value="1">Concluída</option>
                </select>
            </div>

            <div class="d-flex justify-content-between">
                <button class="btn btn-primary w-50 me-2" @onclick="AtualizarTarefa">
                    <i class="bi bi-save"></i> Salvar Alterações
                </button>
                <button class="btn btn-danger w-50" @onclick="ExcluirTarefa">
                    <i class="bi bi-trash"></i> Excluir
                </button>
            </div>
        </div>
    </div>
}


@code {
    [Parameter] public Guid Id { get; set; }
    private TarefaResponseDTO tarefa = new();

    protected override async Task OnInitializedAsync()
    {
        var tarefaResult = await TarefaService.ObterPorId(Id);

        if (tarefaResult != null)
        {
            tarefa = tarefaResult;
        }
        else
        {
            Navigation.NavigateTo("/tarefas");
        }
    }

    private async Task AtualizarTarefa()
    {
        var tarefaRequest = new TarefaRequestDTO
            {
                Titulo = tarefa.Titulo,
                Descricao = tarefa.Descricao,
                Data = tarefa.Data,
                Status = tarefa.Status
            };

        await TarefaService.Atualizar(Id, tarefaRequest);
        Navigation.NavigateTo("/tarefas");
    }

    private async Task ExcluirTarefa()
    {
        await TarefaService.Deletar(Id);
        Navigation.NavigateTo("/tarefas");
    }
}
