@page "/"
@page "/adicionar-tarefa"
@inject TarefaService TarefaService
@inject NavigationManager Navigation

@using TarefasApp.Domain.Models
@using TarefasApp.UI.Models
@using TarefasApp.Domain.DTOs.Requests
@using TarefasApp.Domain.DTOs.Responses

<h3 class="text-center mt-4">Adicionar Tarefa</h3>

<div class="container d-flex justify-content-center">
    <div class="card p-4 shadow-lg w-50">
        <EditForm Model="@novaTarefa" OnValidSubmit="CadastrarTarefa">
            <DataAnnotationsValidator />

        <div class="form-group mb-3">
            <label class="fw-bold">Título</label>
            <InputText @bind-Value="novaTarefa.Titulo" class="form-control" />
            <ValidationMessage For="@(() => novaTarefa.Titulo)" class="text-danger" />
        </div>

        <div class="form-group mb-3">
            <label class="fw-bold">Descrição</label>
            <InputTextArea @bind-Value="novaTarefa.Descricao" class="form-control" />
            <ValidationMessage For="@(() => novaTarefa.Descricao)" class="text-danger" />
        </div>

        <div class="form-group mb-3">
            <label class="fw-bold">Data</label>
                <InputDate @bind-Value="novaTarefa.Data" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />

            <ValidationMessage For="@(() => novaTarefa.Data)" class="text-danger" />
        </div>

            <div class="form-group mb-4">
                <label class="fw-bold">Status</label>
                <InputSelect @bind-Value="novaTarefa.Status" class="form-control">
                    @foreach (var status in Enum.GetValues(typeof(StatusTarefa)).Cast<StatusTarefa>())
                    {
                        <option value="@status">@status.ToString()</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => novaTarefa.Status)" class="text-danger" />
            </div>



            <button class="btn-primary-custom">
                <i class="bi bi-check-circle"></i> Salvar
            </button>

        </EditForm>
</div>
</div>

@code {
    private TarefaRequestDTO novaTarefa = new() { Data = DateTime.Today };

    private bool formInvalido =>
        string.IsNullOrWhiteSpace(novaTarefa.Titulo) ||
        string.IsNullOrWhiteSpace(novaTarefa.Descricao) ||
        novaTarefa.Data < DateTime.Today;

    private async Task CadastrarTarefa()
    {
        if (!formInvalido)
        {
            await TarefaService.Cadastrar(novaTarefa);
            Navigation.NavigateTo("/tarefas");
        }
    }
}

